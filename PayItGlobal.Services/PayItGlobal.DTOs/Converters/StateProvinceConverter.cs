//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 7/7/2024 2:24:18 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace PayItGlobal.DTOs.Generated
{

    public static partial class StateProvinceConverter
    {

        public static StateProvinceDto ToDto(this PayItGlobal.Domain.Entities.StateProvince source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static StateProvinceDto ToDtoWithRelated(this PayItGlobal.Domain.Entities.StateProvince source, int level)
        {
            if (source == null)
              return null;

            var target = new StateProvinceDto();

            // Properties
            target.StateprovinceId = source.StateprovinceId;
            target.StateProvinceCode = source.StateProvinceCode;
            target.CountryRegioncode = source.CountryRegioncode;
            target.IsOnlyStateProvinceFlag = source.IsOnlyStateProvinceFlag;
            target.Name = source.Name;
            target.TerritoryId = source.TerritoryId;
            target.RowGuid = source.RowGuid;
            target.ModifiedDate = source.ModifiedDate;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static PayItGlobal.Domain.Entities.StateProvince ToEntity(this StateProvinceDto source)
        {
            if (source == null)
              return null;

            var target = new PayItGlobal.Domain.Entities.StateProvince();

            // Properties
            target.StateprovinceId = source.StateprovinceId;
            target.StateProvinceCode = source.StateProvinceCode;
            target.CountryRegioncode = source.CountryRegioncode;
            target.IsOnlyStateProvinceFlag = source.IsOnlyStateProvinceFlag;
            target.Name = source.Name;
            target.TerritoryId = source.TerritoryId;
            target.RowGuid = source.RowGuid;
            target.ModifiedDate = source.ModifiedDate;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<StateProvinceDto> ToDtos(this IEnumerable<PayItGlobal.Domain.Entities.StateProvince> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<StateProvinceDto> ToDtosWithRelated(this IEnumerable<PayItGlobal.Domain.Entities.StateProvince> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<PayItGlobal.Domain.Entities.StateProvince> ToEntities(this IEnumerable<StateProvinceDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(PayItGlobal.Domain.Entities.StateProvince source, StateProvinceDto target);

        static partial void OnEntityCreating(StateProvinceDto source, PayItGlobal.Domain.Entities.StateProvince target);

    }

}
