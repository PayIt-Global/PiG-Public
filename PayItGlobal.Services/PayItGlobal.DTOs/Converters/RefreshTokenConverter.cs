//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 7/7/2024 12:01:48 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace PayItGlobal.DTOs.Generated
{

    public static partial class RefreshTokenConverter
    {

        public static RefreshTokenDto ToDto(this PayItGlobal.Domain.Entities.RefreshToken source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static RefreshTokenDto ToDtoWithRelated(this PayItGlobal.Domain.Entities.RefreshToken source, int level)
        {
            if (source == null)
              return null;

            var target = new RefreshTokenDto();

            // Properties
            target.Id = source.Id;
            target.UserId = source.UserId;
            target.Token = source.Token;
            target.Expires = source.Expires;
            target.Created = source.Created;
            target.CreatedByIp = source.CreatedByIp;
            target.Revoked = source.Revoked;
            target.RevokedByIp = source.RevokedByIp;
            target.ReplacedByToken = source.ReplacedByToken;
            target.ReasonRevoked = source.ReasonRevoked;

            // Navigation Properties
            if (level > 0) {
              target.AspNetUser = source.AspNetUser.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static PayItGlobal.Domain.Entities.RefreshToken ToEntity(this RefreshTokenDto source)
        {
            if (source == null)
              return null;

            var target = new PayItGlobal.Domain.Entities.RefreshToken();

            // Properties
            target.Id = source.Id;
            target.UserId = source.UserId;
            target.Token = source.Token;
            target.Expires = source.Expires;
            target.Created = source.Created;
            target.CreatedByIp = source.CreatedByIp;
            target.Revoked = source.Revoked;
            target.RevokedByIp = source.RevokedByIp;
            target.ReplacedByToken = source.ReplacedByToken;
            target.ReasonRevoked = source.ReasonRevoked;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<RefreshTokenDto> ToDtos(this IEnumerable<PayItGlobal.Domain.Entities.RefreshToken> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<RefreshTokenDto> ToDtosWithRelated(this IEnumerable<PayItGlobal.Domain.Entities.RefreshToken> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<PayItGlobal.Domain.Entities.RefreshToken> ToEntities(this IEnumerable<RefreshTokenDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(PayItGlobal.Domain.Entities.RefreshToken source, RefreshTokenDto target);

        static partial void OnEntityCreating(RefreshTokenDto source, PayItGlobal.Domain.Entities.RefreshToken target);

    }

}
