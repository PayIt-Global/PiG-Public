//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 7/1/2024 2:59:24 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace PayItGlobal.DTOs.Generated
{

    public static partial class TransactionConverter
    {

        public static TransactionDto ToDto(this PayItGlobal.Domain.Entities.Transaction source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static TransactionDto ToDtoWithRelated(this PayItGlobal.Domain.Entities.Transaction source, int level)
        {
            if (source == null)
              return null;

            var target = new TransactionDto();

            // Properties
            target.TransactionID = source.TransactionID;
            target.PaymentID = source.PaymentID;
            target.TransactionDate = source.TransactionDate;
            target.Response = source.Response;
            target.ResponseText = source.ResponseText;
            target.AuthCode = source.AuthCode;
            target.TDTransactionID = source.TDTransactionID;
            target.AVSResponse = source.AVSResponse;
            target.CVVResponse = source.CVVResponse;
            target.ResponseCode = source.ResponseCode;
            target.TransactionType = source.TransactionType;
            target.SubscriptionID = source.SubscriptionID;
            target.RebateID = source.RebateID;
            target.CardType = source.CardType;
            target.PortalID = source.PortalID;
            target.PayeeID = source.PayeeID;
            target.Last4CC = source.Last4CC;
            target.Name = source.Name;
            target.IPAddress = source.IPAddress;
            target.Amount = source.Amount;
            target.EmployeePaymentID = source.EmployeePaymentID;
            target.EmployeePayoutID = source.EmployeePayoutID;
            target.SentToQb = source.SentToQb;

            // Navigation Properties
            if (level > 0) {
              target.Payment = source.Payment.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static PayItGlobal.Domain.Entities.Transaction ToEntity(this TransactionDto source)
        {
            if (source == null)
              return null;

            var target = new PayItGlobal.Domain.Entities.Transaction();

            // Properties
            target.TransactionID = source.TransactionID;
            target.PaymentID = source.PaymentID;
            target.TransactionDate = source.TransactionDate;
            target.Response = source.Response;
            target.ResponseText = source.ResponseText;
            target.AuthCode = source.AuthCode;
            target.TDTransactionID = source.TDTransactionID;
            target.AVSResponse = source.AVSResponse;
            target.CVVResponse = source.CVVResponse;
            target.ResponseCode = source.ResponseCode;
            target.TransactionType = source.TransactionType;
            target.SubscriptionID = source.SubscriptionID;
            target.RebateID = source.RebateID;
            target.CardType = source.CardType;
            target.PortalID = source.PortalID;
            target.PayeeID = source.PayeeID;
            target.Last4CC = source.Last4CC;
            target.Name = source.Name;
            target.IPAddress = source.IPAddress;
            target.Amount = source.Amount;
            target.EmployeePaymentID = source.EmployeePaymentID;
            target.EmployeePayoutID = source.EmployeePayoutID;
            target.SentToQb = source.SentToQb;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<TransactionDto> ToDtos(this IEnumerable<PayItGlobal.Domain.Entities.Transaction> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<TransactionDto> ToDtosWithRelated(this IEnumerable<PayItGlobal.Domain.Entities.Transaction> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<PayItGlobal.Domain.Entities.Transaction> ToEntities(this IEnumerable<TransactionDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(PayItGlobal.Domain.Entities.Transaction source, TransactionDto target);

        static partial void OnEntityCreating(TransactionDto source, PayItGlobal.Domain.Entities.Transaction target);

    }

}
