//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 7/1/2024 2:59:24 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace PayItGlobal.DTOs.Generated
{

    public static partial class UserConverter
    {

        public static UserDto ToDto(this PayItGlobal.Domain.Entities.User source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static UserDto ToDtoWithRelated(this PayItGlobal.Domain.Entities.User source, int level)
        {
            if (source == null)
              return null;

            var target = new UserDto();

            // Properties
            target.UserID = source.UserID;
            target.Name = source.Name;
            target.CreationDate = source.CreationDate;
            target.UserName = source.UserName;
            target.ApplicationName = source.ApplicationName;
            target.Email = source.Email;
            target.Password = source.Password;
            target.PasswordQuestion = source.PasswordQuestion;
            target.PasswordAnswer = source.PasswordAnswer;
            target.IsApproved = source.IsApproved;
            target.LastActivityDate = source.LastActivityDate;
            target.LastLoginDate = source.LastLoginDate;
            target.LastPasswordChangedDate = source.LastPasswordChangedDate;
            target.IsOnline = source.IsOnline;
            target.IsLockedOut = source.IsLockedOut;
            target.LastLockedOutDate = source.LastLockedOutDate;
            target.FailedPasswordAttemptCount = source.FailedPasswordAttemptCount;
            target.FailedPasswordAttemptWindowStart = source.FailedPasswordAttemptWindowStart;
            target.FailedPasswordAnswerAttemptCount = source.FailedPasswordAnswerAttemptCount;
            target.FailedPasswordAnswerAttemptWindowStart = source.FailedPasswordAnswerAttemptWindowStart;
            target.LastModified = source.LastModified;
            target.Comment = source.Comment;
            target.PortalID = source.PortalID;
            target.OpenId = source.OpenId;
            target.FireFileKey = source.FireFileKey;
            target.ClientID = source.ClientID;
            target.ClientCustomerID = source.ClientCustomerID;
            target.SecurityStamp = source.SecurityStamp;
            target.EmailConfirmed = source.EmailConfirmed;
            target.EncKeyId = source.EncKeyId;
            target.UsesBeta = source.UsesBeta;
            target.AspNetUserId = source.AspNetUserId;

            // Navigation Properties
            if (level > 0) {
              target.AdminClients = source.AdminClients.ToDtosWithRelated(level - 1);
              target.Payments = source.Payments.ToDtosWithRelated(level - 1);
              target.Portals = source.Portals.ToDtosWithRelated(level - 1);
              target.Roles = source.Roles.ToDtosWithRelated(level - 1);
              target.Client = source.Client.ToDtoWithRelated(level - 1);
              target.AspNetUser = source.AspNetUser.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static PayItGlobal.Domain.Entities.User ToEntity(this UserDto source)
        {
            if (source == null)
              return null;

            var target = new PayItGlobal.Domain.Entities.User();

            // Properties
            target.UserID = source.UserID;
            target.Name = source.Name;
            target.CreationDate = source.CreationDate;
            target.UserName = source.UserName;
            target.ApplicationName = source.ApplicationName;
            target.Email = source.Email;
            target.Password = source.Password;
            target.PasswordQuestion = source.PasswordQuestion;
            target.PasswordAnswer = source.PasswordAnswer;
            target.IsApproved = source.IsApproved;
            target.LastActivityDate = source.LastActivityDate;
            target.LastLoginDate = source.LastLoginDate;
            target.LastPasswordChangedDate = source.LastPasswordChangedDate;
            target.IsOnline = source.IsOnline;
            target.IsLockedOut = source.IsLockedOut;
            target.LastLockedOutDate = source.LastLockedOutDate;
            target.FailedPasswordAttemptCount = source.FailedPasswordAttemptCount;
            target.FailedPasswordAttemptWindowStart = source.FailedPasswordAttemptWindowStart;
            target.FailedPasswordAnswerAttemptCount = source.FailedPasswordAnswerAttemptCount;
            target.FailedPasswordAnswerAttemptWindowStart = source.FailedPasswordAnswerAttemptWindowStart;
            target.LastModified = source.LastModified;
            target.Comment = source.Comment;
            target.PortalID = source.PortalID;
            target.OpenId = source.OpenId;
            target.FireFileKey = source.FireFileKey;
            target.ClientID = source.ClientID;
            target.ClientCustomerID = source.ClientCustomerID;
            target.SecurityStamp = source.SecurityStamp;
            target.EmailConfirmed = source.EmailConfirmed;
            target.EncKeyId = source.EncKeyId;
            target.UsesBeta = source.UsesBeta;
            target.AspNetUserId = source.AspNetUserId;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<UserDto> ToDtos(this IEnumerable<PayItGlobal.Domain.Entities.User> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<UserDto> ToDtosWithRelated(this IEnumerable<PayItGlobal.Domain.Entities.User> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<PayItGlobal.Domain.Entities.User> ToEntities(this IEnumerable<UserDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(PayItGlobal.Domain.Entities.User source, UserDto target);

        static partial void OnEntityCreating(UserDto source, PayItGlobal.Domain.Entities.User target);

    }

}
