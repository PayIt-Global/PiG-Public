//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 7/1/2024 2:59:24 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace PayItGlobal.DTOs.Generated
{

    public static partial class PayonlineProcessorConverter
    {

        public static PayonlineProcessorDto ToDto(this PayItGlobal.Domain.Entities.PayonlineProcessor source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static PayonlineProcessorDto ToDtoWithRelated(this PayItGlobal.Domain.Entities.PayonlineProcessor source, int level)
        {
            if (source == null)
              return null;

            var target = new PayonlineProcessorDto();

            // Properties
            target.ProcessorID = source.ProcessorID;
            target.Name = source.Name;

            // Navigation Properties
            if (level > 0) {
              target.MerchantCredentials = source.MerchantCredentials.ToDtosWithRelated(level - 1);
              target.PayOnlineMerchantCredentials_PayonlineProcessorID1 = source.PayOnlineMerchantCredentials_PayonlineProcessorID1.ToDtosWithRelated(level - 1);
              target.ACHPortals = source.ACHPortals.ToDtosWithRelated(level - 1);
              target.CCPortals = source.CCPortals.ToDtosWithRelated(level - 1);
              target.RetailPortals = source.RetailPortals.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static PayItGlobal.Domain.Entities.PayonlineProcessor ToEntity(this PayonlineProcessorDto source)
        {
            if (source == null)
              return null;

            var target = new PayItGlobal.Domain.Entities.PayonlineProcessor();

            // Properties
            target.ProcessorID = source.ProcessorID;
            target.Name = source.Name;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<PayonlineProcessorDto> ToDtos(this IEnumerable<PayItGlobal.Domain.Entities.PayonlineProcessor> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<PayonlineProcessorDto> ToDtosWithRelated(this IEnumerable<PayItGlobal.Domain.Entities.PayonlineProcessor> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<PayItGlobal.Domain.Entities.PayonlineProcessor> ToEntities(this IEnumerable<PayonlineProcessorDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(PayItGlobal.Domain.Entities.PayonlineProcessor source, PayonlineProcessorDto target);

        static partial void OnEntityCreating(PayonlineProcessorDto source, PayItGlobal.Domain.Entities.PayonlineProcessor target);

    }

}
